from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command

from storage.database import add_favorite, get_favorites
from keyboards import get_main_keyboard, get_save_button
from states import FSMComment

router = Router()

@router.message(Command("start"))
async def start(message: Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç —Å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞–º–∏ –∏–∑ '–†–∏–∫ –∏ –ú–æ—Ä—Ç–∏'.",
        reply_markup=get_main_keyboard()
    )

@router.message(Command("help"))
async def help_command(message: Message):
    await message.answer(
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É\n"
        "/help - –ø–æ–º–æ—â—å\n"
        "üé≤ –†–∞–Ω–¥–æ–º–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–∂ - –ø–æ–ª—É—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞\n"
        "‚≠êÔ∏è –ò–∑–±—Ä–∞–Ω–Ω–æ–µ - –≤–∞—à–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏"
    )

@router.message(F.text == "üé≤ –†–∞–Ω–¥–æ–º–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–∂")
async def random_character_handler(message: Message, character: dict):
    response = (
        f"üë§ –ò–º—è: {character['name']}\n"
        f"üíÄ –°—Ç–∞—Ç—É—Å: {character['status']}\n"
        f"üß¨ –í–∏–¥: {character['species']}\n"
        f"üöª –ü–æ–ª: {character['gender']}\n"
        f"üåç –ü—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏–µ: {character['origin']['name']}\n"
        f"üìç –õ–æ–∫–∞—Ü–∏—è: {character['location']['name']}"
    )
    
    await message.answer_photo(
        photo=character['image'],
        caption=response,
        reply_markup=get_save_button(character['id'])
    )

@router.callback_query(F.data.startswith("save_"))
async def save_character(callback: CallbackQuery, state: FSMContext):
    character_id = callback.data.split("_")[1]
    character_name = callback.message.caption.split('\n')[0].replace("üë§ –ò–º—è: ", "")
    character_image = callback.message.photo[-1].file_id
    
    await state.update_data(
        character_id=character_id,
        character_name=character_name,
        character_image=character_image
    )
    
    await callback.message.answer("–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –ø–µ—Ä—Å–æ–Ω–∞–∂—É:")
    await state.set_state(FSMComment.wait_comment)

@router.message(FSMComment.wait_comment)
async def save_comment(message: Message, state: FSMContext):
    data = await state.get_data()
    add_favorite(
        user_id=message.from_user.id,
        character_id=data['character_id'],
        character_name=data['character_name'],
        character_image=data['character_image'],
        comment=message.text
    )
    await message.answer("‚úÖ –ü–µ—Ä—Å–æ–Ω–∞–∂ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ!")
    await state.clear()

@router.message(F.text == "‚≠êÔ∏è –ò–∑–±—Ä–∞–Ω–Ω–æ–µ")
async def show_favorites(message: Message):
    favorites = get_favorites(message.from_user.id)
    if not favorites:
        await message.answer("–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π.")
        return
    
    for fav in favorites:
        name, image, comment = fav
        caption = f"üë§ {name}\nüí¨ –í–∞—à –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {comment if comment else '–Ω–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è'}"
        await message.answer_photo(photo=image, caption=caption)
